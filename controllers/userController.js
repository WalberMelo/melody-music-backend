const bcryptjs = require("bcryptjs");
const { User, validate } = require("../models/userModel");

async function postUser(req, res) {
  const params = validate(req.body);
  //console.log(params.value); value is generated by validate method.
  const user = new User(params.value);

  try {
    if (params.error) throw { msg: `${params.error}` };
    //require email and password
    if (!params.value.email) throw { msg: "Error: email can not be null" };
    if (!params.value.password)
      throw { msg: "Error: password can not be null" };

    //Avoid duplicated emails
    const emailExists = await User.findOne({ email: params.value.email });
    if (emailExists) throw { msg: "Email already exists" };

    // encrypting password
    const salt = bcryptjs.genSaltSync(10);
    user.password = await bcryptjs.hash(params.value.password, salt);

    user.save();
    res.status(201).send({ user: user });
  } catch (error) {
    res.status(500).send(error);
  }
}

module.exports = { postUser };
